<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
    </parent>

    <name>Backend</name>
    <groupId>fi.minedu.oiva</groupId>
    <artifactId>oiva-backend</artifactId>
    <version>1.9.0</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <jvm.fork.arguments></jvm.fork.arguments>
        <maven.release.version>2.5.2</maven.release.version>
        <maven.resources.version>3.1.0</maven.resources.version>
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>

        <org.jooq.version>3.9.1</org.jooq.version>
        <model.mapper.version>0.7.7</model.mapper.version>
        <postgres.driver.version>42.4.1</postgres.driver.version>
        <postgres.driver.name>org.postgresql.Driver</postgres.driver.name>

        <commons-lang3.version>3.9</commons-lang3.version>
        <HikariCP.version>2.3.8</HikariCP.version>
        <flyway.version>4.2.0</flyway.version>
        <pebble.version>2.3.0</pebble.version>
        <jackson.version>2.8.7</jackson.version>
        <pdfbox.version>1.8.16</pdfbox.version>

        <scala.version>2.11.7</scala.version>
        <scala.maven.version>3.2.0</scala.maven.version>
        <scalatest.version>2.2.1</scalatest.version>
        <scalatest.maven.version>1.0</scalatest.maven.version>

        <!-- overrides spring boot version -->
        <swagger.version>2.9.2</swagger.version>
        <tika.version>1.7</tika.version>
        <spring.data.redis.version>1.8.0.RELEASE</spring.data.redis.version>
        <spring-boot-starter.data.redis.version>1.5.1.RELEASE</spring-boot-starter.data.redis.version>
        <spring-boot-test.version>1.5.1.RELEASE</spring-boot-test.version>
        <spring-security.version>4.2.1.RELEASE</spring-security.version>
        <spring.data.version>1.13.0.RELEASE</spring.data.version>
        <spring.session.version>1.3.0.RELEASE</spring.session.version>
        <jersey.client.version>2.25.1</jersey.client.version>

        <!-- default oiva properties -->
        <oiva.upload.path>${project.build.outputDirectory}</oiva.upload.path>

        <!-- default db settings -->
        <oiva.dbhost>localhost</oiva.dbhost>
        <oiva.schema>oiva</oiva.schema>
        <oiva.dbport>6432</oiva.dbport>
        <oiva.dbname>oiva</oiva.dbname>
        <oiva.dbusername>oiva</oiva.dbusername>
        <oiva.dbpassword>oiva</oiva.dbpassword>
        <!-- default skip unit tests -->
        <skipJavaUnitTests>true</skipJavaUnitTests>
    </properties>

    <scm>
        <developerConnection>scm:git:git@github.com:CSCfi/oiva-backend.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <repositories>
        <repository>
            <id>csc-releases</id>
            <name>CSC releases</name>
            <url>https://maven.csc.fi/repository/internal/</url>
        </repository>
        <repository>
            <id>csc-archiva</id>
            <name>CSC snapshots</name>
            <url>https://maven.csc.fi/repository/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.5</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres.driver.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <configuration>
                        <rules>
                            <requireMavenVersion>
                                <message>You are running an older version of Maven. Oiva Backend requires at least Maven 3.0</message>
                                <version>[3.0.0,)</version>
                            </requireMavenVersion>
                            <requireJavaVersion>
                                <message>You are running an older version of Java. Oiva Backend requires at least JDK ${java.version}</message>
                                <version>[${java.version}.0,)</version>
                            </requireJavaVersion>
                        </rules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <skipTests>${skipJavaUnitTests}</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala.maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>${scalatest.maven.version}</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.version}</version>
                    <configuration>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>logs/</directory>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${org.jooq.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres.driver.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- Integration test plugins -->
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <configuration>
                        <classesDirectory>target/classes</classesDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.28.0</version>
                    <configuration>
                        <imagePullPolicy>IfNotPresent</imagePullPolicy>
                        <showLogs>true</showLogs>
                        <logStdout>true</logStdout>
                        <verbose>true</verbose>
                        <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                        <machine>
                            <name>test-db-machine</name>
                            <autoCreate>true</autoCreate>
                        </machine>
                        <images>
                            <image>
                                <name>oiva-backend-test-db</name>
                                <alias>oiva-test-db</alias>
                                <build>
                                    <from>postgres:9.6</from>
                                    <runCmds>echo "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"> /docker-entrypoint-initdb.d/init-db.sql</runCmds>
                                </build>
                                <run>
                                    <network>
                                        <mode>bridge</mode>
                                    </network>
                                    <ports>
                                        <port>15432:5432</port>
                                    </ports>
                                    <env>
                                        <POSTGRES_USER>${oiva.dbusername}</POSTGRES_USER>
                                        <POSTGRES_PASSWORD>${oiva.dbpassword}</POSTGRES_PASSWORD>
                                        <POSTGRES_DB>${oiva.dbname}</POSTGRES_DB>
                                    </env>
                                </run>
                            </image>
                        </images>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build</id>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>start</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>stop</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fi.minedu.oiva</groupId>
                <artifactId>oiva-core</artifactId>
                <version>1.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.8.5</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_2.11</artifactId>
                <version>${scalatest.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-library</artifactId>
                    </exclusion>
                </exclusions>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>0.7.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-netty</artifactId>
                <version>5.5.1</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-lang3</artifactId>
                        <groupId>org.apache.commons</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>oiva-core</module>
        <module>oiva-core-model</module>
        <module>amos-backend</module>
    </modules>

</project>
